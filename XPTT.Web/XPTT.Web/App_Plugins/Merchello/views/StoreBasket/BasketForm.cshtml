@inherits Umbraco.Web.Mvc.UmbracoViewPage<Merchello.Web.Store.Models.StoreBasketModel>
@using System.Web.Mvc.Html
@using Merchello.Core
@using Merchello.Web.Models.Ui
@using Merchello.Web.Store.Controllers
@using Umbraco.Core.Models
@using Umbraco.Web
@{
    var currentPage = Umbraco.TypedContent(UmbracoContext.Current.PageId);

    using (Html.BeginUmbracoForm<StoreBasketController>("UpdateBasket", new { area = "FastTrack" }, new { data_muifrm = "basket" }))
    {

        @Html.AntiForgeryToken()
    <table class="table mui-basket mui-default">
        <thead>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

        @for (var i = 0; i < Model.Items.Count(); i++)
        {
            var product = Model.Items[i].Product;
            var isProduct = product != null;

            <tr>
                <td class="image">
                    @Html.HiddenFor(model => Model.Items[i].Key)

                    @if (isProduct)
                    {
                        // This is a property reference to a content type on the default starter kit
                        // and may need to change for site specific implementations.  Example!
                        if (product.HasValue("image"))
                        {
                            var mediaId = product.GetPropertyValue<string>("image");
                            var image = Umbraco.TypedMedia(mediaId);

                            <a href="@product.Url" style="vertical-align: -webkit-baseline-middle;"><img src="@image.GetCropUrl(width: 100)" alt="@product.Name" width="20"/></a>
                        }
                        <a href="@product.Url" style="vertical-align: super">
                            <span>@product.Name</span>
                            @foreach (var choice in Model.Items[i].CustomerOptionChoices)
                            {
                                <span class="option-choice">@choice.Key - @choice.Value</span>
                            }
                        </a>
                    }
                    else
                    {
                        // not a product (custom implementation) so just put the name here
                        <span>@Model.Items[i].Name</span>
                    }
                </td>
                <td>@String.Format("{0:n0}", @Model.Items[i].Amount) VNĐ</td>
                <td>
                    @if (isProduct)
                    {
                        @Html.TextBoxFor(model => Model.Items[i].Quantity, new { @type = "number", min = "1", data_muiaction = "updatequantity" })
                    }
                    else
                    {
                        // assume this can't be changed if it is not a product
                        @Html.HiddenFor(model => Model.Items[i].Quantity)
                    }
                </td>
                <td data-muivalue="linetotal">@String.Format("{0:n0}", @Model.Items[i].Total()) VNĐ</td>
                <td class="text-right">
                    @if (Model.WishListEnabled && isProduct) // only products can be added to the wishlist
                    {
                        // the 'area' parameter in the route values should match the PluginController attribute alias
                        @Html.ActionLink("Wish List +", "MoveItemToWishList", "StoreBasket", new { area = "Merchello", lineItemKey = Model.Items[i].Key, successRedirectId = currentPage.Id }, new { @class = "btn btn-info" })
                    }

                    @Html.ActionLink("Xóa", "RemoveBasketItem", "StoreBasket", new { area = "Merchello", lineItemKey = Model.Items[i].Key, redirectId = currentPage.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>


        }
        <tr>
            <td colspan="3" class="text-right"><strong>Sub Total</strong></td>
            <td colspan="2" data-muivalue="total"><strong>@String.Format("{0:n0}", Model.Total()) VNĐ</strong></td>
        </tr>
        <tr class="hide">
            <td colspan="3">&nbsp;</td>
            <td colspan="2"><input type="submit" id="update-cart" class="btn btn-default" name="update" value="Update" data-muibtn="update" /></td>
        </tr>
    </tbody>
    </table>

    }
}
@inherits Umbraco.Web.Mvc.UmbracoViewPage<Merchello.Web.Models.VirtualContent.IProductContent>
@using Merchello.FastTrack.Ui
@using Merchello.Web
@using Merchello.Web.Models
@using Merchello.Web.Models.Ui.Rendering
@using Merchello.Web.Models.VirtualContent
@{
    Layout = "MasterPage.cshtml";

    // the Model passed here is IProductContent (virtual content) that is not generated by the Models Builder.
    // However, it is a Typed IPublishedContent model that exposes product properties such as Price, SalePrice, etc.
    // and the properties from the ContentType that was attached to the product in Merchello's back office.
    // These can be accessed in the same way as any normal IPublishedContent property e.g. GetPropertyValue

    var featureImage = Model.HasValue("image") ? Umbraco.Media(Model.GetPropertyValue<string>("image")).umbracoFile : "";
}





<div class="wrapper">
    <div class="container" id="main">

        <!-- Content -->
        <article id="content">
            <header>
                <h2>@Model.Name</h2>
                <p>
                    Giá bán lẻ: @String.Format("{0:n0}", Model.Price) VND
                    @Html.Action("AddProductToBasketForm", "StoreBasket", new { area = "Merchello", model = Model })
                    @*<a class="btn btn-danger btn-small" href="#open_facebook_box"><i class="icon-folder-open"></i> Mua ngay</a>*@
                </p>
            </header>
            <a href="#" class="image featured"><img src="@featureImage" alt="" /></a>
            <p>
                @Html.Raw(Model.GetPropertyValue<string>("brief"))
            </p>
           @Html.Raw(Model.GetPropertyValue<string>("description"))
        </article>


    </div>


</div>

<script type="text/javascript">
    fbq('track', 'ViewContent',
        {
            content_ids: ['@Model.Name'],
            content_type: 'product',
            value: @Model.Price,
            currency: 'VND'
        }
    );
</script>


@helper Categories(IProductContent product)
{
var collections = product.Collections().ToArray();
if (collections.Any())
{
    var pages = new List<Tuple<IProductCollection, IPublishedContent>>();
    foreach (var col in collections)
    {
        var page = ExampleUiHelper.Content.GetCategoryPageForCollection(col.Key);
        if (page != null)
        {
            pages.Add(new Tuple<IProductCollection, IPublishedContent>(col, page));
        }
    }
    var needsComma = false;
        <small>
            Categories:
            @foreach (var pc in pages)
            {
                @Umbraco.If(needsComma, ",") <a href="@pc.Item2.Url">@pc.Item1.Name</a>
                needsComma = true;
            }
        </small>
}
}